{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Cosmos Dashboard APIs",
    "description": "API for dashboard applications to manage content and settings in the Cosmos platform",
    "version" : "2025-04-18T14:26:01Z"
  },
  "servers" : [ {
    "url" : "https://api.eu-west-1.aworld.cloud/{basePath}",
    "variables" : {
      "basePath" : {
        "default" : "dashboard/v1"
      }
    }
  } ],
  "paths" : {
    "/rewardCurrencies/{rewardCurrencyId}/publish" : {
      "post" : {
        "summary": "Publish a reward currency",
        "description": "Publishes a reward currency, making it available for use in the application",
        "parameters" : [ {
          "name" : "rewardCurrencyId",
          "in" : "path",
          "description": "Unique identifier of the reward currency to publish",
          "required" : true,
          "schema" : {
            "type" : "string",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^\\S+$"
          }
        } ],
        "responses": {
          "200": {
            "description": "Reward currency published successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardCurrency"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Reward currency not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "rewardCurrencyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "post" : {
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/activities" : {
      "get" : {
        "summary": "List activities",
        "description": "Retrieves a paginated list of activities available in the workspace",
        "parameters": [
          {
            "name": "nextToken",
            "in": "query",
            "description": "Pagination cursor for fetching the next set of results",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of activities to return per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of activities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Activity"
                      }
                    },
                    "nextToken": {
                      "type": "string",
                      "description": "Pagination cursor for the next set of results"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/tags" : {
      "get" : {
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "post" : {
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/rewardCurrencies/{rewardCurrencyId}" : {
      "get" : {
        "summary": "Get reward currency by ID",
        "description": "Retrieves a specific reward currency by its unique identifier",
        "parameters" : [ {
          "name" : "rewardCurrencyId",
          "in" : "path",
          "description": "Unique identifier of the reward currency to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^\\S+$"
          }
        } ],
        "responses": {
          "200": {
            "description": "Reward currency retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardCurrency"
                }
              }
            }
          },
          "404": {
            "description": "Reward currency not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "put" : {
        "summary": "Create reward currency",
        "description": "Creates a new reward currency with the specified ID",
        "parameters" : [ {
          "name" : "rewardCurrencyId",
          "in" : "path",
          "description": "Unique identifier for the new reward currency",
          "required" : true,
          "schema" : {
            "type" : "string",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^\\S+$"
          }
        } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRewardCurrencyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reward currency created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardCurrency"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Reward currency ID already exists"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "post" : {
        "summary": "Update reward currency",
        "description": "Updates an existing reward currency identified by its ID",
        "parameters" : [ {
          "name" : "rewardCurrencyId",
          "in" : "path",
          "description": "Unique identifier of the reward currency to update",
          "required" : true,
          "schema" : {
            "type" : "string",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^\\S+$"
          }
        } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRewardCurrencyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reward currency updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardCurrency"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Reward currency not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "rewardCurrencyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/rewardRules/{rewardRuleId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "rewardRuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "rewardRuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "rewardRuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/rewardCurrencies" : {
      "get" : {
        "summary": "List reward currencies",
        "description": "Retrieves a paginated list of reward currencies available in the workspace",
        "parameters": [
          {
            "name": "nextToken",
            "in": "query",
            "description": "Pagination token for fetching the next set of results",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of reward currencies to return per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of reward currencies retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RewardCurrency"
                      }
                    },
                    "nextToken": {
                      "type": "string",
                      "description": "Pagination token for the next set of results"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/activities/{activityId}/publish" : {
      "post" : {
        "summary": "Publish an activity",
        "description": "Publishes an activity, making it available for use in the application",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description": "Unique identifier of the activity to publish",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses": {
          "200": {
            "description": "Activity published successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Activity not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/rewardRules" : {
      "get" : {
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "post" : {
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/tags/{tagId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "tagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "post" : {
        "parameters" : [ {
          "name" : "tagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "tagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/tags/{tagId}/publish" : {
      "post" : {
        "parameters" : [ {
          "name" : "tagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "tagId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/rewardRules/{rewardRuleId}/publish" : {
      "post" : {
        "parameters" : [ {
          "name" : "rewardRuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "rewardRuleId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/users/{userId}" : {
      "get" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    },
    "/activities/{activityId}" : {
      "get" : {
        "summary": "Get activity by ID",
        "description": "Retrieves a specific activity by its unique identifier",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description": "Unique identifier of the activity to retrieve",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses": {
          "200": {
            "description": "Activity retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "404": {
            "description": "Activity not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "put" : {
        "summary": "Create activity",
        "description": "Creates a new activity with the specified ID",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description": "Unique identifier for the new activity",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateActivityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Activity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Activity ID already exists"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "post" : {
        "summary": "Update activity",
        "description": "Updates an existing activity identified by its ID",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description": "Unique identifier of the activity to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActivityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Activity updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Activity not found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security" : [ {
          "dashboard-v1-rest-api-authorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "204 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Methods" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "Access-Control-Allow-Headers" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : { }
          }
        }
      }
    }
  },
  "components" : {
    "schemas": {
      "RewardCurrency": {
        "type": "object",
        "description": "Reward currency entity representing a digital asset or point system that users can earn",
        "required": ["rewardCurrencyId", "name", "origin", "defaultLang", "langs", "createdAt", "updatedAt"],
        "properties": {
          "rewardCurrencyId": {
            "type": "string",
            "description": "Unique identifier for the reward currency",
            "minLength": 2,
            "maxLength": 30,
            "pattern": "^\\S+$"
          },
          "name": {
            "type": "string",
            "description": "Name of the reward currency"
          },
          "origin": {
            "type": "string",
            "enum": ["CATALOG", "CUSTOM"],
            "description": "Whether the reward currency comes from a central catalog or is custom-created"
          },
          "rewardCurrencyCatalogId": {
            "type": "string",
            "description": "ID reference to the original reward currency in the catalog if applicable"
          },
          "syncWithCatalog": {
            "type": "boolean",
            "description": "Whether the reward currency should be synced with catalog updates"
          },
          "defaultLang": {
            "type": "string",
            "description": "The default language code for the reward currency content"
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of language codes available for this reward currency"
          },
          "accountId": {
            "type": "string",
            "description": "The account ID that owns this reward currency"
          },
          "workspaceId": {
            "type": "string",
            "description": "The workspace ID that contains this reward currency"
          },
          "sourceRegion": {
            "type": "string",
            "description": "AWS region where the reward currency was created"
          },
          "stage": {
            "type": "string",
            "enum": ["DRAFT", "PUBLISHED"],
            "description": "Current publication stage of the reward currency"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the reward currency was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the reward currency was last updated"
          }
        }
      },
      "CreateRewardCurrencyRequest": {
        "type": "object",
        "description": "Data required to create a new reward currency",
        "required": ["name", "defaultLang", "translations"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the reward currency"
          },
          "defaultLang": {
            "type": "string",
            "description": "The default language code for the reward currency content"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardCurrencyTranslation"
            },
            "description": "List of translations for the reward currency content",
            "minItems": 1,
            "maxItems": 10
          }
        }
      },
      "UpdateRewardCurrencyRequest": {
        "type": "object",
        "description": "Data required to update an existing reward currency",
        "required": ["name", "defaultLang", "translations"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Updated name of the reward currency"
          },
          "defaultLang": {
            "type": "string",
            "description": "Updated default language code for the reward currency content"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardCurrencyTranslation"
            },
            "description": "Updated list of translations for the reward currency content",
            "minItems": 1,
            "maxItems": 10
          }
        }
      },
      "RewardCurrencyTranslation": {
        "type": "object",
        "description": "Translation for reward currency content in a specific language",
        "required": ["lang", "label"],
        "properties": {
          "lang": {
            "type": "string",
            "description": "Language code for this translation"
          },
          "label": {
            "type": "string",
            "description": "Translated label for the reward currency"
          },
          "description": {
            "type": "string",
            "description": "Translated description for the reward currency"
          }
        }
      },
      "Activity": {
        "type": "object",
        "description": "Activity entity representing a task or action that users can complete",
        "required": ["activityId", "name", "origin", "defaultLang", "langs", "createdAt", "updatedAt"],
        "properties": {
          "activityId": {
            "type": "string",
            "description": "Unique identifier for the activity"
          },
          "name": {
            "type": "string",
            "description": "Name of the activity"
          },
          "origin": {
            "type": "string",
            "enum": ["CATALOG", "CUSTOM"],
            "description": "Whether the activity comes from a central catalog or is custom-created"
          },
          "activityCatalogId": {
            "type": "string",
            "description": "ID reference to the original activity in the catalog if applicable"
          },
          "syncWithCatalog": {
            "type": "boolean",
            "description": "Whether the activity should be synced with catalog updates"
          },
          "defaultLang": {
            "type": "string",
            "description": "The default language code for the activity content"
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of language codes available for this activity"
          },
          "accountId": {
            "type": "string",
            "description": "The account ID that owns this activity"
          },
          "workspaceId": {
            "type": "string",
            "description": "The workspace ID that contains this activity"
          },
          "sourceRegion": {
            "type": "string",
            "description": "AWS region where the activity was created"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the activity was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the activity was last updated"
          }
        }
      },
      "CreateActivityRequest": {
        "type": "object",
        "description": "Data required to create a new activity",
        "required": ["name", "defaultLang", "translations"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the activity"
          },
          "defaultLang": {
            "type": "string",
            "description": "The default language code for the activity content"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTranslation"
            },
            "description": "List of translations for the activity content"
          }
        }
      },
      "UpdateActivityRequest": {
        "type": "object",
        "description": "Data required to update an existing activity",
        "required": ["name", "defaultLang", "translations"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Updated name of the activity"
          },
          "defaultLang": {
            "type": "string",
            "description": "Updated default language code for the activity content"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityTranslation"
            },
            "description": "Updated list of translations for the activity content"
          }
        }
      },
      "ActivityTranslation": {
        "type": "object",
        "description": "Translation for activity content in a specific language",
        "required": ["lang", "label"],
        "properties": {
          "lang": {
            "type": "string",
            "description": "Language code for this translation"
          },
          "label": {
            "type": "string",
            "description": "Translated label for the activity"
          },
          "description": {
            "type": "string",
            "description": "Translated description for the activity"
          }
        }
      }
    },
    "securitySchemes" : {
      "dashboard-v1-rest-api-authorizer" : {
        "type" : "apiKey",
        "name" : "Unused",
        "in" : "header",
        "x-amazon-apigateway-authtype" : "custom",
        "description": "API Gateway custom authorizer for validating dashboard user authentication"
      }
    }
  }
}
